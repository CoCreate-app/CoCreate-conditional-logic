/*! For license information please see CoCreate-conditional-logic.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CoCreate=t():(e.CoCreate=e.CoCreate||{},e.CoCreate.conditionalLogic=t())}(this,(function(){return(()=>{"use strict";var __webpack_modules__={"./node_modules/@cocreate/observer/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// window.addEventListener("load", () => {\n\n/*\nCoCreate.observer.init({ \n\tname: \'CoCreateFetchInit\', // no usage, just to provide for console debugging \n\tobserve: [\'subtree\', \'childList\',\'attributes\'], // the same parameters of options in #https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe\n\tattributes: [\'data-fetch_collection\'], // it doesn\'t count added nodes or remove nodes\n\tinclude: ".classname", // a selector to select only elements that matches\n\texclude: ".classname", // a selector to exclude elements from processing\n\tcallback: function(mutation) { // a function which gets a mutation object according to #https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\n\t\tCoCreateFetch.initElement(mutation.target)\n\t}\n})\n*/\n\n\n/**\n * description\n * \n * @param {String} [name] - an optional name to provide for debugging console\n * @param {Array} observe - a list of mutation type to be observerd, a mix of possible `attributes`, `childList` or `subtree`\n * ... and other params can be here \n * \n * @return null\n */\nwindow.profiler = {}\nwindow.counter = 0;\nwindow.counter2 = 0;\nwindow.targets = {};\nwindow.attributeName = {};\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n    function(s) {\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n      while (--i >= 0 && matches.item(i) !== this) {}\n      return i > -1;\n    };\n}\n\nconst CoCreateObserver = {\n  initTasks: new Map(),\n  attrTasks: new Map(),\n  rules: new Map(),\n  rulesArray: [],\n\n  __init: function() {\n    const self = this;\n    const observer = new MutationObserver((mutationsList, observer) => self.__callback(mutationsList, observer));\n\n    // setTimeout(()=>{\n    observer.observe(document.body, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      characterData: false,\n      attributeOldValue: true,\n      characterData: true,\n    });\n  },\n\n  // init: function(data) {\n  //   this.add(data);\n  // },\n\n  init: function({ observe, include, exclude, attributes, name, callback }) {\n    console.log(\' aaaaaaaaaaaaaa observer init \',name)\n\n    // if (name == \'ccAttribute\' || name == \'ccCss\') {\n      if (observe.some(x => x == "childList")) {\n        this.initTasks.set(callback, { observe, include, exclude, attributes, name });\n      }\n\n      if (observe.some(x => x == "attributes")) {\n        this.attrTasks.set(callback, { observe, include, exclude, attributes, name });\n      }\n    // }\n\n  },\n  remove: function(callback) {\n    this.initTasks.delete(callback)\n    this.attrTasks.delete(callback)\n  },\n\n  addRule: function({ include, exclude, name }) {\n    this.rules.set(name, { include, exclude });\n    this.rulesArray = Array.from(this.rules);\n  },\n\n  removeRule: function({ name }) {\n    this.rules.delete(name);\n    this.rulesArray = Array.from(this.rules);\n  },\n\n  __callback: function(mutationsList, observer) {\n    // console.log(this)\n    window.counter++;\n    for (let mutation of mutationsList) {\n      if (mutation.type == "childList" && mutation.addedNodes.length > 0) {\n        //. run init functions\n        this.__initCallback(mutation)\n      }\n\n      if (mutation.type == "attributes") {\n        //. run attributes functions\n        this.__attrCallback(mutation);\n      }\n    }\n  },\n\n  __initCallback: function(mutation) {\n    let addedNodes = Array.from(mutation.addedNodes);\n\n    this.initTasks.forEach(({ observe, include, exclude, attributes, name }, callback) => {\n\n      mutation.addedNodes.forEach((el) => {\n        if (!el.tagName) return;\n\n        if (include && !(el.matches(include) || el.querySelector(include))) {\n          return\n        }\n        if (exclude && (el.matches(exclude) || el.querySelector(exclude))) {\n          return;\n        }\n\n        // if (el.created) return;\n        // window.counter2++;\n        // window.profiler[name] = window.profiler[name] != undefined ? window.profiler[name] + 1 : 0;\n        // window.targets[mutation.target.id || mutation.target.tagName] =\n        //   window.targets[mutation.target.id || mutation.target.tagName] != undefined ?\n        //   window.targets[mutation.target.id || mutation.target.tagName] + 1 :\n        //   0;\n\n        // window.attributeName[mutation.attributeName] =\n        //   window.attributeName[mutation.attributeName] != undefined ?\n        //   window.attributeName[mutation.attributeName] + 1 :\n        //   0;\n        callback.apply(null, [{ type: mutation.type, target: el }]);\n      })\n    });\n\n    // addedNodes.map(el => el.created = true);\n  },\n\n  __attrCallback: function(mutation) {\n    for (let [name, { include, exclude }] of this.rulesArray) {\n      if (include && !mutation.target.matches(include)) return;\n      if (exclude && mutation.target.matches(exclude)) return;\n    }\n    this.attrTasks.forEach(({ observe, include, exclude, attributes, name }, callback) => {\n      if (attributes && mutation.attributeName && !attributes.includes(mutation.attributeName)) {\n        return;\n      }\n      if (include && !mutation.target.matches(include)) return;\n      if (exclude && mutation.target.matches(exclude)) return;\n\n      if (mutation.attributeName) {\n        let newValue = mutation.target.getAttribute(mutation.attributeName);\n        if (newValue != mutation.oldValue) {\n          // window.counter2++;\n          // window.profiler[name] = window.profiler[name] != undefined ? window.profiler[name] + 1 : 0;\n          // window.targets[mutation.target.id || mutation.target.tagName] =\n          //   window.targets[mutation.target.id || mutation.target.tagName] != undefined ?\n          //   window.targets[mutation.target.id || mutation.target.tagName] + 1 :\n          //   0;\n\n          // window.attributeName[mutation.attributeName] =\n          //   window.attributeName[mutation.attributeName] != undefined ?\n          //   window.attributeName[mutation.attributeName] + 1 :\n          //   0;\n          callback.apply(null, [mutation]);\n        }\n      }\n\n    })\n  },\n\n  setInitialized: function(element, type) {\n    // element.setAttribute(`initialized_${type}`, "true");\n    type = type || "";\n    let key = "co_initialized_" + type;\n    element[key] = true;\n  },\n\n  getInitialized: function(element, type) {\n    type = type || "";\n    let key = "co_initialized_" + type;\n    if (!element[key]) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n}\n\nCoCreateObserver.__init();\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateObserver);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/observer/src/index.js\n')},"./src/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _observer = _interopRequireDefault(__webpack_require__(/*! @cocreate/observer */ \"./node_modules/@cocreate/observer/src/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*!\n * https://cocreate.app\n * https://github.com/CoCreate-app/Conditional_Logic\n * Released under the MIT license\n * https://github.com/CoCreate-app/Conditional_Logic/blob/master/LICENSE\n */\ninitShowHideEles();\ndocument.addEventListener('fetchedTemplate', () => {\n  initShowHideEles();\n}); //. cocreate init section\n\nfunction initShowHideEles(container) {\n  let mainContainer = container || document;\n\n  if (!mainContainer.querySelectorAll) {\n    return;\n  }\n\n  let elements = mainContainer.querySelectorAll(`[data-show],[data-hide]`);\n\n  if (elements.length === 0 && mainContainer != document && (mainContainer.hasAttribute(`[data-show]`) || mainContainer.hasAttributes(\"[data-hide\"))) {\n    elements = [mainContainer];\n  }\n\n  for (let el of elements) {\n    if (_observer.default.getInitialized(el, \"conditional-logic\")) {\n      return;\n    }\n\n    _observer.default.setInitialized(el, \"conditional-logic\");\n\n    if (el.tagName.toLowerCase() == \"option\") el = el.closest('select');\n    el.removeEventListener('change', selectShowHideEle);\n    el.removeEventListener(\"click\", clickShowHideEle);\n    el.addEventListener(\"change\", selectShowHideEle);\n    el.addEventListener(\"click\", clickShowHideEle);\n  }\n} // CoCreateInit.register('CoCreateConditionalLogic', window, window.initShowHideEles);\n\n\n_observer.default.init({\n  name: 'CoCreateConditionalLogic',\n  observe: ['subtree', 'childList'],\n  include: '[data-show],[data-hide]',\n  callback: function (mutation) {\n    initShowHideEles(mutation.target);\n  }\n}); //. upgrade by jin (using document event)\n// function initShowHideEles() {\n// \tconst selector = \"[data-show],[data-hide]\";\n// \tdocument.removeEventListener(\"change\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tselectShowHideEle(event)\n// \t\t}\n// \t});\n// \tdocument.removeEventListener(\"click\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tclickShowHideEle(event)\n// \t\t}\n// \t});\n// \tdocument.addEventListener(\"change\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tselectShowHideEle(event)\n// \t\t}\n// \t});\n// \t\tdocument.addEventListener(\"click\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tclickShowHideEle(event)\n// \t\t}\n// \t});\n// }\n\n\nfunction selectShowHideEle(e) {\n  console.log(this, 'select');\n  e.preventDefault();\n  var select = this;\n  if (typeof select.options != 'undefined') for (var i = 0, len = select.options.length; i < len; i++) {\n    var opt = select.options[i];\n    var value = opt.value;\n\n    if (value != '') {\n      var show = opt.dataset.show; // var show_class = opt.dataset.showClass\n\n      if (typeof show != 'undefined') {\n        for (let el of document.querySelectorAll(show)) el.classList.add('hidden');\n\n        if (opt.selected === true) {\n          for (let el of document.querySelectorAll(show)) el.classList.remove('hidden');\n        }\n      }\n    } //end value is not empty\n\n  } //end for\n}\n\nfunction clickShowHideEle(e) {\n  console.log(this, 'click');\n  var show = this.dataset.show;\n  var hide = this.dataset.hide;\n  let tagName = this.tagName.toLowerCase();\n\n  if (tagName == 'input' && this.getAttribute(\"type\").toLowerCase() == 'radio') {\n    let name = this.getAttribute(\"name\");\n    let radios = document.querySelectorAll(tagName + '[name=\"' + name + '\"]');\n\n    for (let radio of radios) {\n      show = radio.dataset.show;\n\n      for (let el of document.querySelectorAll(show)) {\n        el.classList.add('hidden');\n      }\n\n      if (radio.checked) {\n        for (let el of document.querySelectorAll(show)) el.classList.remove('hidden');\n      }\n    }\n  } else {\n    let updated_els = [];\n\n    for (let el of document.querySelectorAll(show)) {\n      if (el.classList.contains('hidden')) {\n        el.classList.remove('hidden');\n        updated_els.push(el);\n      }\n    }\n\n    for (let el of document.querySelectorAll(hide)) {\n      let existEqual = false;\n\n      for (let uel of updated_els) {\n        if (el.isEqualNode(uel)) {\n          existEqual = true;\n          break;\n        }\n      }\n\n      if (!existEqual) el.classList.add('hidden');\n    }\n  }\n}\n\nconst CoCreateConditionalLogic = {\n  initShowHideEles,\n  selectShowHideEle,\n  clickShowHideEle\n};\nvar _default = CoCreateConditionalLogic;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n")}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()}));